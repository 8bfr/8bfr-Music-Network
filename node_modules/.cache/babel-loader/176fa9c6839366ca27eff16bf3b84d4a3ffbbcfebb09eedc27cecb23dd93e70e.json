{"ast":null,"code":"import{createClient}from\"@supabase/supabase-js\";const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;export const supabase=createClient(supabaseUrl,supabaseAnonKey);// Quick connection test\n(async()=>{const{data,error}=await supabase.from(\"test\").select(\"*\").limit(1);if(error){console.error(\"❌ Supabase connection failed:\",error.message);}else{console.log(\"✅ Supabase connection successful!\");}})();","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","data","error","from","select","limit","console","message","log"],"sources":["/data/data/com.termux/files/home/8bfr-Music-Network/src/supabaseClient.js"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Quick connection test\n(async () => {\n  const { data, error } = await supabase.from(\"test\").select(\"*\").limit(1);\n  if (error) {\n    console.error(\"❌ Supabase connection failed:\", error.message);\n  } else {\n    console.log(\"✅ Supabase connection successful!\");\n  }\n})();\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,uBAAuB,CAEpD,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,KAAM,CAAAC,eAAe,CAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,CAE/D,MAAO,MAAM,CAAAC,QAAQ,CAAGP,YAAY,CAACC,WAAW,CAAEI,eAAe,CAAC,CAElE;AACA,CAAC,SAAY,CACX,KAAM,CAAEG,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CACxE,GAAIH,KAAK,CAAE,CACTI,OAAO,CAACJ,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAACK,OAAO,CAAC,CAC/D,CAAC,IAAM,CACLD,OAAO,CAACE,GAAG,CAAC,mCAAmC,CAAC,CAClD,CACF,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}